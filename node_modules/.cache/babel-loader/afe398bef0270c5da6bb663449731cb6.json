{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Downloads\\\\DH\\\\entregable-fDaniel-Ram\\xEDrez\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Item(_ref) {\n  _s();\n\n  let {\n    data,\n    add\n  } = _ref;\n  // eslint-disable-next-line no-unused-vars\n  const [stock, setStock] = useState(data);\n\n  function handleStock(item, id) {\n    function restar() {\n      add();\n      item.stock--;\n    }\n\n    if (item.id === id) {\n      item.stock > 0 ? restar() : alert(\"Pailas\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: stock.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"producto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: item.productonombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.producto.descripcion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"En Stock:\", item.stock > 0 ? item.stock : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" agotado \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStock(item, item.id),\n        children: \"COMPRAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(Item, \"92a+8V1FJnKq6QP58jimitbZCVA=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["useState","Item","data","add","stock","setStock","handleStock","item","id","restar","alert","map","index","productonombre","producto","descripcion"],"sources":["C:/Users/Daniel/Downloads/DH/entregable-fDaniel-Ramírez/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n\r\nexport default function Item({ data, add }) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [stock, setStock] = useState(data);\r\n\r\n  function handleStock(item, id) {\r\n    function restar() {\r\n      add();\r\n      item.stock--;\r\n    }\r\n\r\n    if (item.id === id) {\r\n      item.stock > 0 ? restar() : \r\n      alert(\"Pailas\");\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      {stock.map((item, index) => (\r\n        <div className=\"producto\" key={index}>\r\n          <h3>{item.productonombre}</h3>\r\n          <p>{item.producto.descripcion}</p>\r\n          <h5>\r\n            En Stock: \r\n            {item.stock > 0 ? item.stock : <span> agotado </span> }\r\n            \r\n          </h5>\r\n          <button onClick={() => handleStock(item, item.id)}>COMPRAR</button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,IAAT,OAA6B;EAAA;;EAAA,IAAf;IAAEC,IAAF;IAAQC;EAAR,CAAe;EAC1C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,IAAD,CAAlC;;EAEA,SAASI,WAAT,CAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;IAC7B,SAASC,MAAT,GAAkB;MAChBN,GAAG;MACHI,IAAI,CAACH,KAAL;IACD;;IAED,IAAIG,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;MAClBD,IAAI,CAACH,KAAL,GAAa,CAAb,GAAiBK,MAAM,EAAvB,GACAC,KAAK,CAAC,QAAD,CADL;IAED;EACF;;EAGD,oBAEE;IAAA,UACGN,KAAK,CAACO,GAAN,CAAU,CAACJ,IAAD,EAAOK,KAAP,kBACT;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAA,UAAKL,IAAI,CAACM;MAAV;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIN,IAAI,CAACO,QAAL,CAAcC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,wBAEGR,IAAI,CAACH,KAAL,GAAa,CAAb,GAAiBG,IAAI,CAACH,KAAtB,gBAA8B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFjC;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAQE;QAAQ,OAAO,EAAE,MAAME,WAAW,CAACC,IAAD,EAAOA,IAAI,CAACC,EAAZ,CAAlC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA,GAA+BI,KAA/B;MAAA;MAAA;MAAA;IAAA,QADD;EADH,iBAFF;AAiBD;;GAlCuBX,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}